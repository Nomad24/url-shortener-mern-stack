{"version":3,"sources":["hooks/usehttp.tsx","hooks/useAuth.tsx","pages/createPage.tsx","context/authContext.tsx","pages/authPage.tsx","pages/home.page.tsx","components/link.card.tsx","pages/detail.page.tsx","components/links.list.tsx","components/loader.tsx","pages/links.page.tsx","pages/brands.page.tsx","routes.tsx","components/navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useHttp","useState","loading","setLoading","request","useCallback","url","method","body","headers","a","localStorage","setItem","JSON","stringify","fetch","response","json","data","ok","Error","message","removeItem","useAuth","parse","getItem","Token","setToken","userId","setUserId","login","jwtToken","id","token","logout","CreatePage","link1","useRef","link2","link_brand","history","useHistory","pressHandler","event","key","from","current","value","Authorization","toast","info","setTimeout","push","link","_id","alert","error","submitLink","submitBrand","name","className","style","paddingTop","placeholder","type","ref","onKeyPress","onClick","autoClose","authContext","createContext","isAuthenticated","AuthPage","auth","useContext","email","password","form","setForm","changeHandler","currentTarget","registerHandler","success","loginHandler","window","location","reload","onChange","disabled","marginRight","HomePage","links","setLinks","to","htmlFor","map","index","href","target","LinkCard","useParams","delLink","rel","clicks","Date","date","toLocaleDateString","DetailPage","setLink","getLink","fetched","useEffect","LinksList","length","Loader","display","justifyContent","LinksPage","load","setLoad","fetchLinks","UseRoutes","props","isAuth","path","exact","Navbar","user","setUser","getUser","prevUser","paddingRight","color","preventDefault","App","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.80f2f7c9.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url: string,\r\n      method: string,\r\n      body: any,\r\n      headers: any\r\n    ) => {\r\n      setLoading(true);\r\n      localStorage.setItem(\"load\", \"load\");\r\n\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Something went wrong\");\r\n        }\r\n\r\n        setLoading(false);\r\n        localStorage.removeItem(\"load\");\r\n\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  return { loading, request };\r\n};\r\n\r\nexport default useHttp;\r\n","import {useState, useCallback} from \"react\";\r\n\r\n\r\nconst storageName: string = \"userData\";\r\n\r\nconst useAuth = () => {\r\n    const [Token, setToken] = useState(JSON.parse(localStorage.getItem(storageName)!));\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback((jwtToken, id) =>\r\n    {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, []);\r\n\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    return {Token, userId, login, logout};\r\n};\r\n\r\nexport default useAuth;","import React, { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/usehttp\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst CreatePage: React.FC = () => {\r\n  const link1 = useRef<HTMLInputElement>(null);\r\n  const link2 = useRef<HTMLInputElement>(null);\r\n  const link_brand = useRef<HTMLInputElement>(null);\r\n  const { Token } = useAuth();\r\n  const history = useHistory();\r\n  const { request } = useHttp();\r\n\r\n  const pressHandler = async (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          { from: link1.current!.value },\r\n          {\r\n            Authorization: Token.token,\r\n          }\r\n        );\r\n        toast.info(data.message);\r\n        setTimeout(() => {\r\n          history.push(`/detail/${data.link._id}`);\r\n        }, 3000);\r\n      } catch (error) {\r\n        alert(error);\r\n        toast.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitLink = async () => {\r\n    try {\r\n      const data = await request(\r\n        \"/api/link/generate\",\r\n        \"POST\",\r\n        { from: link1.current!.value },\r\n        {\r\n          Authorization: Token.token,\r\n        }\r\n      );\r\n      toast.info(data.message);\r\n      setTimeout(() => {\r\n        history.push(`/detail/${data.link._id}`);\r\n      }, 3000);\r\n    } catch (error) {\r\n      alert(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  const submitBrand = async () => {\r\n    try {\r\n      const data = await request(\r\n        \"/api/link/generate-brand-link\",\r\n        \"POST\",\r\n        {\r\n          from: link2.current!.value,\r\n          name: link_brand.current!.value,\r\n        },\r\n        {\r\n          Authorization: Token.token,\r\n        }\r\n      );\r\n      if(data.info == \"Created\"){\r\n        toast.info(data.message);\r\n        setTimeout(() => {\r\n          history.push(`/detail/${data.link._id}`);\r\n        }, 3000);\r\n      }\r\n      if(data.info == \"Exist\"){\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      alert(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\r\n            <div className=\"card blue darken-4\">\r\n              <div className=\"card-content black-text\">\r\n              <p>Create Link</p>\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    placeholder=\"Paste Link\"\r\n                    id=\"link1\"\r\n                    type=\"text\"\r\n                    ref={link1}\r\n                    onKeyPress={pressHandler}\r\n                  />\r\n                  <button\r\n                    onClick={submitLink}\r\n                    className=\"btn waves-light\"\r\n                    type=\"submit\"\r\n                    name=\"action\"\r\n                  >\r\n                    Submit\r\n                    <i className=\"material-icons right\">send</i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card blue darken-4\">\r\n              <div className=\"card-content black-text\">\r\n                <p>Create Brand Link</p>\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    placeholder=\"Paste Original Link\"\r\n                    id=\"link2\"\r\n                    type=\"text\"\r\n                    ref={link2}\r\n                  />\r\n                  <input\r\n                    placeholder=\"Paste Brand Link\"\r\n                    id=\"link-brand\"\r\n                    type=\"text\"\r\n                    ref={link_brand}\r\n                  />\r\n                  <button\r\n                    onClick={submitBrand}\r\n                    className=\"btn waves-light\"\r\n                    type=\"submit\"\r\n                    name=\"action\"\r\n                  >\r\n                    Submit\r\n                    <i className=\"material-icons right\">send</i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer autoClose={2000}></ToastContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePage;\r\n","import {createContext} from \"react\";\r\n\r\nfunction noop (token: any, id: any) {};\r\nfunction noop1 () {};\r\n\r\nconst authContext = createContext({\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop1,\r\n    isAuthenticated: false\r\n});\r\n\r\nexport default authContext;\r\n","import React, { useState, useContext } from \"react\";\r\nimport useHttp from \"../hooks/usehttp\";\r\nimport authContext from \"../context/authContext\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"materialize-css\";\r\n\r\nconst AuthPage: React.FC = () => {\r\n  const { loading, request } = useHttp();\r\n  const auth = useContext(authContext);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\r\n        \"/api/auth/register\",\r\n        \"POST\",\r\n        { ...form },\r\n        {}\r\n      );\r\n      toast.success(data.message);\r\n    } catch (error) {\r\n      alert(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\r\n        \"/api/auth/login\",\r\n        \"POST\",\r\n        { ...form },\r\n        {}\r\n      );\r\n      toast.success(\"You have successfully logged in\");\r\n      setTimeout(function(){ \r\n        auth.login(data.token, data.userId);\r\n        window.location.reload(); \r\n      }, 3000);\r\n    } catch (error) {\r\n      alert(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col s6 offset-s3\">\r\n            <h1>URL Shortener</h1>\r\n            <div className=\"card blue darken-4\">\r\n              <div className=\"card-content white-text\">\r\n                <span className=\"card-title\">Authorization</span>\r\n                <div>\r\n                  <div className=\"input-field\">\r\n                    <input\r\n                      placeholder=\"Enter Email\"\r\n                      id=\"email\"\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      className=\"yellow-input\"\r\n                      onChange={changeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                    <input\r\n                      placeholder=\"Enter Password\"\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      className=\"yellow-input\"\r\n                      onChange={changeHandler}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action\">\r\n                <button\r\n                  disabled={loading}\r\n                  className=\"btn green\"\r\n                  style={{ marginRight: 10 }}\r\n                  onClick={loginHandler}\r\n                >\r\n                  Sign in\r\n                </button>\r\n                <button\r\n                  disabled={loading}\r\n                  onClick={registerHandler}\r\n                  className=\"btn yellow darken-4\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <ToastContainer autoClose={2000}></ToastContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/usehttp\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst HomePage: React.FC = () => {\r\n  const [links, setLinks]: any = useState([]);\r\n  const ref = useRef<HTMLInputElement>(null);\r\n  const history = useHistory();\r\n  const { request } = useHttp();\r\n\r\n  const pressHandler = async (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate-guest\",\r\n          \"POST\",\r\n          { from: ref.current!.value },\r\n          {}\r\n        );\r\n        toast.info(data.message);\r\n        setLinks([...links, data.link.to]);\r\n      } catch (error) {\r\n        alert(error);\r\n        toast.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitLink = async () => {\r\n    try {\r\n      const data = await request(\r\n        \"/api/link/generate-guest\",\r\n        \"POST\",\r\n        { from: ref.current!.value },\r\n        {}\r\n      );\r\n      toast.info(data.message);\r\n      setLinks([...links, data.link.to]);\r\n    } catch (error) {\r\n      alert(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"nav-wrapper blue darken-4\">\r\n          <a onClick={() => history.push(\"/\")} className=\"brand-logo center a_link\">\r\n            URL Shortener\r\n          </a>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li>\r\n              <a onClick={() => history.push(\"/auth\")}>Sign in or Sign up</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <h2 className=\"st\">Welcome to Url Shortener</h2>\r\n            <div className=\"card blue darken-4\">\r\n              <div className=\"card-content black-text\">\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    placeholder=\"Paste your link\"\r\n                    id=\"link\"\r\n                    type=\"text\"\r\n                    ref={ref}\r\n                    onKeyPress={pressHandler}\r\n                  />\r\n                  <label htmlFor=\"link\">Paste link</label>\r\n                  <button onClick={submitLink} className=\"btn waves-light\" type=\"submit\" name=\"action\">Submit\r\n                  <i className=\"material-icons right\">send</i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action\">\r\n                {links.map((link: any, index: any) => {\r\n                  return (\r\n                    <div>\r\n                      <h6>Link</h6>\r\n                      <div className=\"blue-grey darken-1\">\r\n                        <ul className=\"collection\">\r\n                          <li className=\"collection-item\">\r\n                            <div>\r\n                              {link}\r\n                              <a\r\n                                href={link}\r\n                                target=\"_blank\"\r\n                                className=\"secondary-content\"\r\n                              >\r\n                                <i className=\"material-icons\">send</i>\r\n                              </a>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer autoClose={2000}></ToastContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/usehttp\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ninterface Link {\r\n  link: any;\r\n}\r\n\r\nexport const LinkCard: React.FC<Link> = ({ link }) => {\r\n  const { Token } = useAuth();\r\n  const history = useHistory();\r\n  const { request } = useHttp();\r\n  const { id }: any = useParams();\r\n\r\n  const delLink = async () => {\r\n    try {\r\n      const data = await request(\r\n        `/api/link/delete/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: Token.token,\r\n        }\r\n      );\r\n      toast.error(data.message);\r\n      setTimeout(() => {\r\n        history.push('/links');\r\n      }, 3000);\r\n    } catch (error) {\r\n      alert(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"card blue darken-4\">\r\n      <div className=\"card-content black-text\">\r\n        {link.name ? <h3>Brand Link</h3> : <h3>Link</h3>}\r\n\r\n        <p>\r\n          Short link:{\" \"}\r\n          <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {link.to}\r\n          </a>\r\n        </p>\r\n        <p>\r\n          Original:{\" \"}\r\n          <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {link.from}\r\n          </a>\r\n        </p>\r\n        {link.name ? <p>Brand Name: {link.name}</p> : null}\r\n        <p>\r\n          Number of clicks on the link: <strong>{link.clicks}</strong>\r\n        </p>\r\n        <p>\r\n          Date:{\" \"}\r\n          <strong>{new Date(link.date).toLocaleDateString(\"en-GB\")}</strong>\r\n        </p>\r\n        <p>\r\n          <button\r\n            onClick={delLink}\r\n            className=\"btn waves-light red darken-4\"\r\n            type=\"submit\"\r\n            name=\"action\"\r\n          >\r\n            Delete Link\r\n          </button>\r\n        </p>\r\n      </div>\r\n      <ToastContainer autoClose={2000}></ToastContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkCard;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/usehttp\";\r\nimport LinkCard from \"../components/link.card\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst DetailPage: React.FC = () => {\r\n  const { Token } = useAuth();\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(null);\r\n  const { id }: any = useParams();\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(\r\n        `/api/link/${id}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: Token.token,\r\n        }\r\n      );\r\n      setLink(fetched);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, [Token, id, request]);\r\n\r\n  useEffect(() => {\r\n    getLink();\r\n  }, [getLink]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">{link && <LinkCard link={link} />}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Links {\r\n  links: string[];\r\n}\r\n\r\nexport const LinksList: React.FC<Links> = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">No links</p>;\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <div className=\"card blue darken-4\">\r\n        <div className=\"card-content black-text\">\r\n          <thead>\r\n            <tr>\r\n              <th>№</th>\r\n              <th>Original link</th>\r\n              <th>Short link</th>\r\n              <th>Open</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {links.map((link: any, index) => {\r\n              return (\r\n                <tr key={link._id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{link.from}</td>\r\n                  <td>{link.to}</td>\r\n                  <td>\r\n                    <Link to={`/detail/${link._id}`}>Open</Link>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </div>\r\n      </div>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default LinksList;\r\n","import React from 'react'\r\n\r\nconst Loader: React.FC = () => (\r\n  <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport useHttp from \"../hooks/usehttp\";\r\nimport LinksList from \"../components/links.list\";\r\nimport Loader from \"../components/loader\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst LinksPage: React.FC = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const { request } = useHttp();\r\n  const { Token } = useAuth();\r\n  const fetchLinks = useCallback(async () => {\r\n    setLoad(true);\r\n    try {\r\n      const fetched = await request(\r\n        \"/api/link/\",\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: Token.token,\r\n        }\r\n      );\r\n      setLinks(fetched);\r\n      setLoad(false);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, [Token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchLinks();\r\n  }, [fetchLinks]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">{load ? <Loader /> : <LinksList links={links} />}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinksPage;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport useHttp from \"../hooks/usehttp\";\r\nimport LinksList from \"../components/links.list\";\r\nimport Loader from \"../components/loader\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst LinksPage: React.FC = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const { request } = useHttp();\r\n  const { Token } = useAuth();\r\n  const fetchLinks = useCallback(async () => {\r\n    setLoad(true);\r\n    try {\r\n      const fetched = await request(\r\n        \"/api/link/brand-name\",\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: Token.token,\r\n        }\r\n      );\r\n      setLinks(fetched);\r\n      setLoad(false);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, [Token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchLinks();\r\n  }, [fetchLinks]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">{load ? <Loader /> : <LinksList links={links} />}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinksPage;","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport CreatePage from \"./pages/createPage\";\r\nimport AuthPage from \"./pages/authPage\";\r\nimport HomePage from \"./pages/home.page\";\r\nimport DetailPage from \"./pages/detail.page\";\r\nimport LinksPage from \"./pages/links.page\";\r\nimport BrandsPage from \"./pages/brands.page\";\r\n\r\ninterface createPage {\r\n  isAuth: boolean;\r\n}\r\n\r\nconst UseRoutes: React.FC<createPage> = (props) => {\r\n  if (props.isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Route path=\"/links\">\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/brand-links\">\r\n          <BrandsPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/auth\">\r\n        <AuthPage />\r\n      </Route>\r\n      <Route path=\"/\" exact>\r\n          <HomePage />\r\n        </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default UseRoutes;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport authContext from \"../context/authContext\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport useHttp from \"../hooks/usehttp\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(authContext);\r\n  const { Token } = useAuth();\r\n  const { request } = useHttp();\r\n  const [user, setUser]: any = useState([]);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const data = await request(\r\n        `/api/auth/${Token.userId}`,\r\n        \"POST\",\r\n        null,\r\n        { Authorization: Token.token }\r\n      );\r\n      setUser((prevUser: any) => [...prevUser, data.email]);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [Token]);\r\n\r\n  const logoutHandler = (event: React.MouseEvent) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"nav-wrapper blue darken-4\">\r\n          <a className=\"brand-logo a_link\" onClick={() => history.push(\"/\")}>\r\n            URL Shortener\r\n          </a>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li style={{ paddingRight: \"20px\" }}>\r\n              Logged as <strong style={{ color: \"black\" }}>{user}</strong>\r\n            </li>\r\n            <li>\r\n              <a onClick={() => history.push(\"/create\")}>Create</a>\r\n            </li>\r\n            <li>\r\n              <a onClick={() => history.push(\"/links\")}>Links</a>\r\n            </li>\r\n            <li>\r\n              <a onClick={() => history.push(\"/brand-links\")}>Brand Links</a>\r\n            </li>\r\n            <li>\r\n              <a onClick={logoutHandler}>Logout</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport UseRoutes from \"./routes\";\nimport authContext from \"./context/authContext\";\nimport Navbar from \"./components/navbar\";\nimport useAuth from \"./hooks/useAuth\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const { Token, userId, login, logout } = useAuth();\n  const isAuthenticated = !!Token;\n  \n  return (\n    <authContext.Provider\n      value={{ userId, login, logout, isAuthenticated }}\n    >\n      <BrowserRouter>\n        {isAuthenticated && <Navbar />}\n        {<UseRoutes isAuth={isAuthenticated} />}\n      </BrowserRouter>\n    </authContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}